services:
  # --- 1. База данных PostgreSQL ---
  postgres:
    image: postgres:14-alpine
    container_name: portal_postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    # Healthcheck проверяет, готова ли БД принимать подключения,
    # прежде чем разрешить запуск зависимых сервисов.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- 2. Redis с дополнительными модулями ---
  # Судя по логам, вы используете модули (JSON, Search и т.д.).
  # Стандартный образ redis их не содержит. redis/redis-stack-server - то, что нужно.
  redis:
    image: redis/redis-stack-server:latest
    container_name: portal_redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- 3. Главный портал (точка входа) ---
  portal_main:
    build: ./portal # Убедитесь, что путь к Dockerfile верный
    container_name: portal_main
    restart: always
    env_file: ./.env
    # Этот сервис не зависит от БД, но может зависеть от Redis
    depends_on:
      redis:
        condition: service_healthy

  # --- 4. Приложение Datamatrix ---
  datamatrix_app:
    build: ./datamatrix-app
    container_name: datamatrix_app
    restart: always
    env_file: ./.env
    # Запускается только после того, как postgres и redis станут "healthy"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # --- 5. Приложение Ручной Агрегации ---
  manual_aggregation_app:
    build: ./manual-aggregation-app
    container_name: manual_aggregation_app
    restart: always
    env_file: ./.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # --- 6. Приложение Интеграции с ДМкод ---
  dmkod-integration-app:
    build: ./dmkod-integration-app # Убедитесь, что путь к Dockerfile верный
    container_name: dmkod-integration-app
    restart: always
    env_file: ./.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # --- 7. Nginx (единая точка входа) ---
  nginx:
    image: nginx:1.29-alpine # Используем версию из ваших логов
    container_name: portal_nginx
    restart: always
    ports:
      # Судя по логам, вы заходите на порт 8080
      - "80:80"
    volumes:
      # Пробрасываем конфигурационный файл для Nginx
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    # Nginx должен стартовать после всех приложений, на которые он ссылается
    depends_on:
      - portal_main
      - datamatrix_app
      - manual_aggregation_app
      - dmkod-integration-app